plugins {
    id "base"
    id "java-platform"
}

ext {
    env = Dotenv.configure().location("$rootDir").filename(".env").allowMissingFile(true).load()
}

wrapper {
    gradleVersion = project.property("version.gradle")
}

dependencies {
    constraints {
        // @formatter:off
        api group: "com.fasterxml.jackson.core", name: "jackson-databind"    , version: this["version.jackson"]
        api group: "com.google.code.findbugs"  , name: "jsr305"              , version: this["version.findbugsJsr305"]
        api group: "com.tngtech.archunit"      , name: "archunit-junit5"     , version: this["version.archunit"]
        api group: "de.siegmar"                , name: "fastcsv"             , version: this["version.fastcsv"]
        api group: "javax.validation"          , name: "validation-api"      , version: this["version.javaxValidation"]
        api group: "org.apache.commons"        , name: "commons-collections4", version: this["version.apacheCommonsCollections"]
        api group: "org.apache.commons"        , name: "commons-lang3"       , version: this["version.apacheCommonsLang"]
        api group: "org.codehaus.janino"       , name: "janino"              , version: this["version.janino"]
        api group: "org.javamoney"             , name: "moneta"              , version: this["version.javamoneyMoneta"]
        api group: "org.mapstruct"             , name: "mapstruct"           , version: this["version.mapstruct"]
        api group: "org.mapstruct"             , name: "mapstruct-processor" , version: this["version.mapstruct"]
        api group: "org.mockito.kotlin"        , name: "mockito-kotlin"      , version: this["version.mockitoKotlin"]
        // @formatter:on
    }
}

task stage(type: Jar, dependsOn: [":app-client:build", ":app-server:build"]) {
    group = "build"
    description = "Created composite Jar file including client and server part"

    entryCompression = ZipEntryCompression.STORED

    def serverBuild = zipTree("${project(":app-server").buildDir}/libs/app-server.jar")
    def clientBuild = "${project(":app-client").projectDir}/dist"

    from(serverBuild) { into "/" }
    from(clientBuild) { into "/BOOT-INF/classes/static" }

    manifest {
        from {
            serverBuild.find { it.name == "MANIFEST.MF" }
        }
    }
}
