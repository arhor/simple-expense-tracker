import com.github.gradle.node.npm.task.NpmTask
import com.github.gradle.node.npm.task.NpxTask

plugins {
    id "simple-expense-tracker.node-conventions"
}

description = String.format(
    "Client-side application based on React.js and Node.js %s",
    project.property("versions.node")
)

def synchronizeModel = tasks.register("synchronizeModel", Sync) {
    dependsOn(":app-models:build")

    from "${project(":app-models").buildDir}/generated/sources/js2ts"
    into "${projectDir}/src/generated"
}

def updateBrowserList = tasks.register("updateBrowserList", NpxTask) {
    dependsOn(npmInstall)

    workingDir.fileValue(projectDir)
    command.set("browserslist@latest")

    args = ["--update-db"]
}

def test = tasks.register("test", NpmTask) {
    dependsOn(npmInstall, updateBrowserList, synchronizeModel)

    group = "verification"
    workingDir.fileValue(projectDir)

    args = ["run", "test"]
}

tasks.register("build", NpmTask) {
    dependsOn(npmInstall, updateBrowserList, synchronizeModel, test)

    group = "build"
    workingDir.fileValue(projectDir)

    inputs.dir("src")
    inputs.dir("public")
    inputs.dir("node_modules")
    inputs.files(
        "index.html",
        "package.json",
        "package-lock.json",
        "tsconfig.json",
        "tsconfig.node.json",
        "vite.config.json",
    )

    outputs.dir("dist")
    outputs.cacheIf { true }

    args = ["run", "build"]
}
